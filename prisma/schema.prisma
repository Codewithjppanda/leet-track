generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum NOTIFICATION_METHOD {
  EMAIl
  PUSH_NOTIFICATION // For browser notifications
}

model User {
  id             String @id @default(cuid())
  externalUserId String @unique
  email          String @unique
  phoneNumber    String @unique

  username         String
  profileImage     String
  leetCodeUsername String @unique @default(cuid())

  bio   String @default("")
  goals String @default("")

  preferredNotificationMethod NOTIFICATION_METHOD @default(EMAIl)

  // User can set multiple reminders
  reminder Reminder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum REMINDER_STATUS {
  UPCOMING
  PENDING
  COMPLETED
}

enum PROBLEM_DIFFICULTY {
  EASY
  MEDIUM
  HARD
}

model Reminder {
  id String @id @default(cuid())

  // Used to track status of reminder for analytic purposes
  reminderStatus REMINDER_STATUS @default(UPCOMING)

  // Details of the problem
  problemName       String?
  problemDifficulty PROBLEM_DIFFICULTY @default(EASY)
  // Leetcode Link
  problemLink       String

  // Date when the reminder will be sent
  scheduledDate DateTime

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, problemName, problemLink])
}
